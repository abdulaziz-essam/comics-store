[{"D:\\Git\\comics-store\\my-app\\src\\index.js":"1","D:\\Git\\comics-store\\my-app\\src\\reportWebVitals.js":"2","D:\\Git\\comics-store\\my-app\\src\\App.js":"3","D:\\Git\\comics-store\\my-app\\src\\components\\contactUs\\Contact.js":"4","D:\\Git\\comics-store\\my-app\\src\\components\\signUp\\SignUp.js":"5","D:\\Git\\comics-store\\my-app\\src\\components\\navbar\\Navbar.js":"6","D:\\Git\\comics-store\\my-app\\src\\components\\signIn\\SignIn.js":"7","D:\\Git\\comics-store\\my-app\\src\\components\\mainPage\\MainPage.js":"8","D:\\Git\\comics-store\\my-app\\src\\components\\addComics\\Add.js":"9","D:\\Git\\comics-store\\my-app\\src\\components\\dc-comics\\Dc.js":"10","D:\\Git\\comics-store\\my-app\\src\\components\\firebase\\firebase.js":"11","D:\\Git\\comics-store\\my-app\\src\\components\\marvel\\Marvel.js":"12","D:\\Git\\comics-store\\my-app\\src\\components\\cart\\Cart.js":"13"},{"size":500,"mtime":1641939112775,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1641939116858,"results":"16","hashOfConfig":"15"},{"size":1365,"mtime":1647208069215,"results":"17","hashOfConfig":"15"},{"size":211,"mtime":1646085512573,"results":"18","hashOfConfig":"15"},{"size":3993,"mtime":1646084504708,"results":"19","hashOfConfig":"15"},{"size":467,"mtime":1647207485079,"results":"20","hashOfConfig":"15"},{"size":2356,"mtime":1648157202884,"results":"21","hashOfConfig":"15"},{"size":5967,"mtime":1648161162495,"results":"22","hashOfConfig":"15"},{"size":2422,"mtime":1645541966692,"results":"23","hashOfConfig":"15"},{"size":3545,"mtime":1647206065985,"results":"24","hashOfConfig":"15"},{"size":2847,"mtime":1645896292004,"results":"25","hashOfConfig":"15"},{"size":2991,"mtime":1647207034695,"results":"26","hashOfConfig":"15"},{"size":3358,"mtime":1648161619828,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"j6wumd",{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Git\\comics-store\\my-app\\src\\index.js",[],["58","59"],"D:\\Git\\comics-store\\my-app\\src\\reportWebVitals.js",[],"D:\\Git\\comics-store\\my-app\\src\\App.js",[],"D:\\Git\\comics-store\\my-app\\src\\components\\contactUs\\Contact.js",["60"],"import React from 'react'\r\nimport twitter from \"../../img/twitter.png\"\r\nimport \"./contact.css\"\r\nexport default function Contact() {\r\n  return (\r\n    <div><img className=\"twitter\" src={twitter} /></div>\r\n  )\r\n}\r\n","D:\\Git\\comics-store\\my-app\\src\\components\\signUp\\SignUp.js",["61","62"],"import React, { useEffect, useState } from \"react\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {\r\n    auth,\r\n    registerWithEmailAndPassword,\r\n    signInWithGoogle,\r\n} from \"../../components/firebase/firebase.js\";\r\nimport \"./signup.css\";\r\nfunction Register() {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [name, setName] = useState(\"\");\r\n    const [user, loading, error] = useAuthState(auth);\r\n    const navigate = useNavigate();\r\n    const register = () => {\r\n        if (!name) alert(\"Please enter name\");\r\n        registerWithEmailAndPassword(name, email, password);\r\n    };\r\n    useEffect(() => {\r\n        if (loading) return;\r\n        if (user) navigate('/mainpage');\r\n    }, [user, loading]);\r\n    return (\r\n        <div className=\"register\">\r\n            <div className=\"register__container\">\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"register__textBox\"\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                    placeholder=\"Full Name\"\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"register__textBox\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    placeholder=\"E-mail Address\"\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    className=\"register__textBox\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    placeholder=\"Password\"\r\n                />\r\n                <button className=\"register__btn\" onClick={register}>\r\n                    Register\r\n                </button>\r\n                <button\r\n                    className=\"register__btn register__google\"\r\n                    onClick={signInWithGoogle}\r\n                >\r\n                    Register with Google\r\n                </button>\r\n                <div>\r\n                    Already have an account? <Link to=\"/\">Login</Link> now.\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Register;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React from 'react'\r\n// import { Form, Button } from 'react-bootstrap'\r\n// import { Link } from \"react-router-dom\";\r\n// import './signup.css'\r\n// export default function SignIn() {\r\n//     return (\r\n//         <div>\r\n//             <Form>\r\n//                 <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n//                     <Form.Label>Email address</Form.Label>\r\n//                     <Form.Control type=\"email\" placeholder=\"Enter email\" />\r\n//                     <Form.Text className=\"text-muted\">\r\n//                         We'll never share your email with anyone else.\r\n//                     </Form.Text>\r\n//                 </Form.Group>\r\n\r\n//                 <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n//                     <Form.Label>Password</Form.Label>\r\n//                     <Form.Control type=\"password\" placeholder=\"Password\" />\r\n//                 </Form.Group>\r\n//                 <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n//                     <Form.Label>Username</Form.Label>\r\n//                     <Form.Control type=\"password\" placeholder=\"\" />\r\n//                 </Form.Group>\r\n//                 <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\r\n         \r\n//                     {/* <Form.Check type=\"checkbox\" label=\"Check me out\" /> */}\r\n//                 </Form.Group>\r\n\r\n//                 <Link to=\"/mainpage\"> <Button variant=\"primary\" type=\"submit\" >Create\r\n//                 </Button></Link>\r\n\r\n\r\n//             </Form>\r\n\r\n//         </div>\r\n//     )\r\n// }\r\n","D:\\Git\\comics-store\\my-app\\src\\components\\navbar\\Navbar.js",[],"D:\\Git\\comics-store\\my-app\\src\\components\\signIn\\SignIn.js",["63","64"],"D:\\Git\\comics-store\\my-app\\src\\components\\mainPage\\MainPage.js",["65","66"],"D:\\Git\\comics-store\\my-app\\src\\components\\addComics\\Add.js",[],"D:\\Git\\comics-store\\my-app\\src\\components\\dc-comics\\Dc.js",["67","68"],"import React from 'react';\r\nimport './dc.css'\r\nimport { Carousel, Container, Row, Col, Card, Button } from 'react-bootstrap';\r\nimport batman from '../../img/batman.png'\r\nimport comic from '../../img/comic.png'\r\nimport { useEffect,useState } from 'react';\r\nimport axios from 'axios'\r\n\r\nconst baseURL = \"http://localhost:4000/show\";\r\nexport default function Dc() {\r\n    const [data, setData]= useState([{}])\r\n    // https://api.github.com/users/mapbox\r\n   \r\n    useEffect(() => {\r\n        fetch(baseURL\r\n        )\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                   console.log(result)\r\n                   setData(result)\r\n                })},[])\r\n    return (\r\n        <div>\r\n            <div className=\"coming-cards\">\r\n                <h1 className=\"coming-soon\">DC comics</h1>\r\n                <Container >\r\n\r\n                    <Row>\r\n                        {/* first card  */}\r\n                        <Col xs >\r\n                     \r\n                            <Card className=\"card\" style={{ width: '18rem' }}>\r\n                                <Card.Img className=\"img\" variant=\"top\" src={comic} />\r\n                                <Card.Body>\r\n                                    <Card.Title>{data.name}</Card.Title>\r\n                                    <Card.Text>\r\n                                        Some quick example text to build on the card title and make up the bulk of\r\n                                        the card's content.\r\n                                    </Card.Text>\r\n                                    <Button  className=\"click\" variant=\"primary\">Go somewhere</Button>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                        {/* second card */}\r\n                        <Col xs={{ order: 12 }}>\r\n                            <Card style={{ width: '18rem' }}>\r\n                                <Card.Img variant=\"top\" src={batman} />\r\n                                <Card.Body>\r\n                                    <Card.Title>Card Title</Card.Title>\r\n                                    <Card.Text>\r\n                                        Some quick example text to build on the card title and make up the bulk of\r\n                                        the card's content.\r\n                                    </Card.Text>\r\n                                    <Button variant=\"primary\">Go somewhere</Button>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                        {/* third card */}\r\n                        <Col xs={{ order: 1 }}>\r\n                            <Card style={{ width: '18rem' }}>\r\n                                <Card.Img variant=\"top\" src={batman} />\r\n                                <Card.Body>\r\n                                    <Card.Title>Card Title</Card.Title>\r\n                                    <Card.Text>\r\n                                        Some quick example text to build on the card title and make up the bulk of\r\n                                        the card's content.\r\n                                    </Card.Text>\r\n                                    <Button variant=\"primary\">Go somewhere</Button>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        </div>\r\n      \r\n    );\r\n}\r\n\r\n\r\n","D:\\Git\\comics-store\\my-app\\src\\components\\firebase\\firebase.js",[],"D:\\Git\\comics-store\\my-app\\src\\components\\marvel\\Marvel.js",[],"D:\\Git\\comics-store\\my-app\\src\\components\\cart\\Cart.js",[],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":6,"column":10,"nodeType":"75","endLine":6,"endColumn":51},{"ruleId":"76","severity":1,"message":"77","line":15,"column":27,"nodeType":"78","messageId":"79","endLine":15,"endColumn":32},{"ruleId":"80","severity":1,"message":"81","line":24,"column":8,"nodeType":"82","endLine":24,"endColumn":23,"suggestions":"83"},{"ruleId":"76","severity":1,"message":"77","line":10,"column":27,"nodeType":"78","messageId":"79","endLine":10,"endColumn":32},{"ruleId":"80","severity":1,"message":"81","line":18,"column":8,"nodeType":"82","endLine":18,"endColumn":23,"suggestions":"84"},{"ruleId":"76","severity":1,"message":"85","line":3,"column":9,"nodeType":"78","messageId":"79","endLine":3,"endColumn":17},{"ruleId":"76","severity":1,"message":"86","line":5,"column":8,"nodeType":"78","messageId":"79","endLine":5,"endColumn":12},{"ruleId":"76","severity":1,"message":"85","line":3,"column":10,"nodeType":"78","messageId":"79","endLine":3,"endColumn":18},{"ruleId":"76","severity":1,"message":"87","line":7,"column":8,"nodeType":"78","messageId":"79","endLine":7,"endColumn":13},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["90"],["91"],"'Carousel' is defined but never used.","'img2' is defined but never used.","'axios' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"92","fix":"93"},{"desc":"92","fix":"94"},"Update the dependencies array to be: [user, loading, navigate]",{"range":"95","text":"96"},{"range":"97","text":"96"},[860,875],"[user, loading, navigate]",[733,748]]